{"version":3,"file":"static/js/528.85c3287c.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-column-gap: 10px;\n  grid-row-gap: 10px;\n  justify-content: center;\n\n  padding: 10px;\n  margin-top: 15px;\n\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  /* border: 1px solid black; */\n  max-width: 150px;\n  /* height: 280px; */\n\n  padding: 5px;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus-visible {\n    scale: 1.1;\n    box-shadow: 3px 2px 5px 1px rgba(0, 0, 0, 0.26);\n  }\n`;\n\nexport const LinkItem = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  text-decoration: none;\n`;\n\nexport const Text = styled.p`\n  display: block;\n  text-align: center;\n\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types'; // ES6\n\nimport { List, Item, LinkItem, Text } from './MoviesList.styled';\n\nexport const MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {moviesList.map(({ id, title, original_title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://i.postimg.cc/VL0DBTFD/cinema-popcorn-soda-drink-tickets-and-film-strip-movie-poster-with-fast-food-snack-and-cola-beverage.webp'\n                }\n                alt={title && original_title}\n                width=\"150\"\n                height=\"200\"\n              />\n              <Text>{title && original_title}</Text>\n            </LinkItem>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n  gap: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n\n  background-color: white;\n  border: 1px solid grey;\n\n  border-radius: 4px;\n\n  &:hover,\n  :active {\n    color: white;\n    background-color: orangered;\n    border: 0px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types'; // ES6\n\nimport { Form, Input, Button } from './SearchBar.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  const handleInputChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Enter movie title\"\n        onChange={handleInputChange}\n        value={query}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchBox } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { fetchMovieByName } from '../services/API';\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    fetchMovieByName(movieName)\n      .then(data => setMoviesList(data.data.results))\n      .catch(error => console.log(error.message));\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchBox onSubmit={updateQueryString} />\n      {moviesList.length > 0 && <MoviesList moviesList={moviesList} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0ffc72445f4cf4ad84f6636a20d6ec36';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response =\n    await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US\n  `);\n  return response;\n};\n\nexport const fetchMovieByName = async query => {\n  const response =\n    await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false\n  `);\n  return response;\n};\n\nexport const fetchMovieCastById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchMovieReviewById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["List","styled","Item","LinkItem","Link","Text","MoviesList","moviesList","location","useLocation","map","id","title","original_title","poster_path","to","state","from","src","alt","width","height","Form","Input","Button","SearchBox","onSubmit","useState","query","setQuery","evt","preventDefault","type","placeholder","onChange","target","value","setMoviesList","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovieByName","then","data","results","catch","error","console","log","message","length","axios","API_KEY","fetchPopularMovies","response","fetchMovieById","movieId","fetchMovieCastById","fetchMovieReviewById"],"sourceRoot":""}