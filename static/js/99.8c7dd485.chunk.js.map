{"version":3,"file":"static/js/99.8c7dd485.chunk.js","mappings":"iPAEaA,EAAgBC,EAAAA,GAAAA,IAAH,kFAMbC,EAAaD,EAAAA,GAAAA,GAAH,mFAMVE,EAAaF,EAAAA,GAAAA,GAAH,mI,SCuBvB,EA/Be,WACb,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBN,GAClBO,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAKA,KAAKC,QAAxB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACX,IAECG,GAKH,SAACP,EAAD,WACE,UAACE,EAAD,YACIK,EAAOW,SAAU,iEAClBX,EAAOY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACnB,EAAD,YACE,wBAAKkB,KACL,uBAAIC,MAFWF,EAKpB,SAdE,IAkBV,C,+LCjCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,yBAEzBA,EAASd,KAAKC,SAFW,2CAAH,qDAKlBc,EAAc,mCAAG,WAAMvB,GAAN,uFAEpBmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCoB,EAAtC,wBAFoB,cACtBE,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdE,EAAgB,mCAAG,WAAMC,GAAN,uFAEtBN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEK,EAAlE,6BAFsB,cACxBH,EADwB,yBAIvBA,GAJuB,2CAAH,sDAOhBI,EAAkB,mCAAG,WAAM1B,GAAN,uFACTmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,oBADS,cAC1BE,EAD0B,yBAIzBA,GAJyB,2CAAH,sDAOlBhB,EAAoB,mCAAG,WAAMN,GAAN,uFACXmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,IAFJ,cAC5BE,EAD4B,yBAI3BA,GAJ2B,2CAAH,qD","sources":["components/Review/Review.styled.js","components/Review/Review.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperReview = styled.div`\n  display: block;\n  margin-top: 15px;\n  padding: 20px;\n`;\n\nexport const ListReview = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ItemReview = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  padding: 5px;\n\n  border: 1px solid grey;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviewById } from '../../services/API';\nimport { WrapperReview, ListReview, ItemReview } from './Review.styled';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviewById(movieId)\n      .then(data => setReview(data.data.results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!review) {\n    return null;\n  }\n\n  return (\n    <WrapperReview>\n      <ListReview>\n        {!review.length && <div>There are no reviews for this movie</div>}\n        {review.map(({ id, author, content }) => {\n          return (\n            <ItemReview key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </ItemReview>\n          );\n        })}\n      </ListReview>\n    </WrapperReview>\n  );\n};\n\nexport default Review;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0ffc72445f4cf4ad84f6636a20d6ec36';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response =\n    await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US\n  `);\n  return response;\n};\n\nexport const fetchMovieByName = async query => {\n  const response =\n    await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false\n  `);\n  return response;\n};\n\nexport const fetchMovieCastById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchMovieReviewById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["WrapperReview","styled","ListReview","ItemReview","movieId","useParams","useState","review","setReview","useEffect","fetchMovieReviewById","then","data","results","catch","error","console","log","length","map","id","author","content","axios","API_KEY","fetchPopularMovies","response","fetchMovieById","fetchMovieByName","query","fetchMovieCastById"],"sourceRoot":""}