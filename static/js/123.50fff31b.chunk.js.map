{"version":3,"file":"static/js/123.50fff31b.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 15px;\n\n  padding: 15px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  list-style: none;\n  padding: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const Additional = styled.div`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n  padding: 15px;\n\n  border-bottom: 1px solid grey;\n`;\n\nexport const LinkItem = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 50px;\n\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: 1px solid grey;\n\n  color: #000;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus-visible {\n    color: #a43d3d;\n  }\n\n  &.active {\n    color: white;\n    background-color: orangered;\n    border: 0px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  margin-top: 10px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport PropTypes from 'prop-types'; // ES6\n\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  // console.log(to);\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\n\nimport { fetchMovieById } from '../../services/API';\nimport { Box, List, Item, LinkItem, Additional } from './MovieDetails.styled';\nimport { BackLink } from '../BackLink/BackLink';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [movieInfo, setMovieInfo] = useState([]);\n\n  const pageFrom = location.state?.from ?? '/';\n  const refLocation = useRef(location.state?.location);\n\n  useEffect(() => {\n    fetchMovieById(movieId)\n      .then(data => setMovieInfo(data.data))\n      .catch(error => alert('Please reload the page'));\n  }, [movieId]);\n\n  if (!movieInfo || !movieId) {\n    return null;\n  }\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieInfo;\n\n  return (\n    <div>\n      <BackLink to={refLocation.current ?? pageFrom}>Go back</BackLink>\n      <Box>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://i.postimg.cc/VL0DBTFD/cinema-popcorn-soda-drink-tickets-and-film-strip-movie-poster-with-fast-food-snack-and-cola-beverage.webp'\n          }\n          alt={title && original_title}\n          width=\"200\"\n        />\n        <List>\n          <Item>\n            <h2>\n              {title && original_title} ({new Date(release_date).getFullYear()})\n            </h2>\n            <p>User score: {Math.floor(vote_average * 10)}%</p>\n          </Item>\n          <Item>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </Item>\n          <Item>\n            <h3>Genres</h3>\n            <p>{genres ? genres.map(genre => genre.name).join(', ') : '-'}</p>\n          </Item>\n        </List>\n      </Box>\n\n      <Additional>\n        <h3>Additional information</h3>\n        <List>\n          <li>\n            <LinkItem to={'cast'} state={{ from: pageFrom }}>\n              Cast\n            </LinkItem>\n          </li>\n          <li>\n            <LinkItem to={'reviews'} state={{ from: pageFrom }}>\n              Reviews\n            </LinkItem>\n          </li>\n        </List>\n      </Additional>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0ffc72445f4cf4ad84f6636a20d6ec36';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response =\n    await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US\n  `);\n  return response;\n};\n\nexport const fetchMovieByName = async query => {\n  const response =\n    await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false\n  `);\n  return response;\n};\n\nexport const fetchMovieCastById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchMovieReviewById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["Box","styled","List","Item","Additional","LinkItem","NavLink","StyledLink","Link","BackLink","to","children","size","movieId","useParams","location","useLocation","useState","movieInfo","setMovieInfo","pageFrom","state","from","refLocation","useRef","useEffect","fetchMovieById","then","data","catch","error","alert","poster_path","title","original_title","release_date","vote_average","overview","genres","current","src","alt","width","Date","getFullYear","Math","floor","map","genre","name","join","Suspense","fallback","axios","API_KEY","fetchPopularMovies","response","results","fetchMovieByName","query","fetchMovieCastById","fetchMovieReviewById"],"sourceRoot":""}